name: Build & Deploy to ALIYUN - i18n

on:
    push:
        tags:
            - '*'
            - '!*-alpha*'
            - '!*-beta*'

    workflow_dispatch:

env:
    REGISTRY_IMAGE: registry.cn-hangzhou.aliyuncs.com/winwin/lightdash

jobs:
    # This job builds Docker images for various architectures in parallel
    # See https://docs.docker.com/build/ci/github-actions/multi-platform/#distribute-build-across-multiple-runners
    docker-build:
        runs-on: ubuntu-latest
        if: ${{ github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork }}
        strategy:
            fail-fast: false
            matrix:
                platform:
                    - linux/amd64
        steps:
            # Write the PLATFORM_PAIR varible to env and replace `/` with `-`
            - name: Prepare
              run: |
                  platform=${{ matrix.platform }}
                  echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

            - name: Set up Docker tags
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY_IMAGE }}
                  tags: |
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=raw,value=latest,enable={{is_default_branch}}

            # We need this to perform cross-platform Docker builds
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            # Improved Docker builds
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            # Credentials for pushing final image to Docker Hub
            - name: Login to Aliyun Container Registry
              uses: docker/login-action@v3
              with:
                  registry: registry.cn-hangzhou.aliyuncs.com
                  username: ${{ secrets.ALIYUN_REGISTRY_USER }}
                  password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

            - name: Build and push by digest
              id: build
              uses: docker/build-push-action@v5
              with:
                  file: dockerfile
                  push: ${{ github.event_name != 'pull_request' }}
                  labels: ${{ steps.meta.outputs.labels }}
                  platforms: ${{ matrix.platform }}
                  tags: ${{ steps.meta.outputs.tags }}
                  outputs: type=image,name=${{ env.REGISTRY_IMAGE }}
                  provenance: false
                  cache-from: type=registry,ref=${{ env.REGISTRY_IMAGE }}
                  cache-to: ${{ github.event_name != 'pull_request' && format('type=registry,mode=min,ref={0}', env.REGISTRY_IMAGE) || '' }}

            - name: Export digest
              run: |
                  mkdir -p /tmp/digests
                  digest="${{ steps.build.outputs.digest }}"
                  touch "/tmp/digests/${digest#sha256:}"

            - name: Upload digest
              uses: actions/upload-artifact@v4
              with:
                  name: digests-${{ env.PLATFORM_PAIR }}
                  path: /tmp/digests/*
                  if-no-files-found: error
                  retention-days: 1

    # This step "merges" multiple images for various architectures into a single image
    docker-merge:
        runs-on: ubuntu-latest
        # Should be kept in sync with the jobs.docker-build.steps.build.with.push condition
        if: ${{ github.event_name != 'pull_request' }}
        needs:
            - docker-build
        steps:
            - name: Download digests
              uses: actions/download-artifact@v4
              with:
                  pattern: digests-*
                  path: /tmp/digests
                  merge-multiple: true

            - name: Set up Docker tags
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY_IMAGE }}
                  tags: |
                      type=semver,pattern={{version}}

            - name: Login to Aliyun Container Registry
              uses: docker/login-action@v3
              with:
                  registry: registry.cn-hangzhou.aliyuncs.com
                  username: ${{ secrets.ALIYUN_REGISTRY_USER }}
                  password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

            - name: Create manifest list and push
              working-directory: /tmp/digests
              run: |
                  for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' '); do
                    docker buildx imagetools create -t $tag \
                      $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
                  done

            - name: Inspect image
              run: |
                  docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
